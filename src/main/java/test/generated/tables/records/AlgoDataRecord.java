/*
 * This file is generated by jOOQ.
 */
package test.generated.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import test.generated.tables.AlgoData;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlgoDataRecord extends UpdatableRecordImpl<AlgoDataRecord> implements Record3<Long, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.algo_data.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.algo_data.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.algo_data.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.algo_data.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.algo_data.algo_name</code>.
     */
    public void setAlgoName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.algo_data.algo_name</code>.
     */
    public String getAlgoName() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, LocalDateTime, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, LocalDateTime, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AlgoData.ALGO_DATA.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return AlgoData.ALGO_DATA.TIMESTAMP;
    }

    @Override
    public Field<String> field3() {
        return AlgoData.ALGO_DATA.ALGO_NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getTimestamp();
    }

    @Override
    public String component3() {
        return getAlgoName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getTimestamp();
    }

    @Override
    public String value3() {
        return getAlgoName();
    }

    @Override
    public AlgoDataRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AlgoDataRecord value2(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public AlgoDataRecord value3(String value) {
        setAlgoName(value);
        return this;
    }

    @Override
    public AlgoDataRecord values(Long value1, LocalDateTime value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlgoDataRecord
     */
    public AlgoDataRecord() {
        super(AlgoData.ALGO_DATA);
    }

    /**
     * Create a detached, initialised AlgoDataRecord
     */
    public AlgoDataRecord(Long id, LocalDateTime timestamp, String algoName) {
        super(AlgoData.ALGO_DATA);

        setId(id);
        setTimestamp(timestamp);
        setAlgoName(algoName);
    }
}
